/*
 * Copyright 2018 1&1 Internet SE.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.oneandone.gameoflife.ui;

import com.oneandone.gameoflife.Field;
import com.oneandone.gameoflife.GameOfLife;
import com.oneandone.gameoflife.LifeControl;
import com.oneandone.gameoflife.LifeRunnable;
import java.util.Random;
import javax.swing.SwingUtilities;
import lombok.Getter;
import lombok.Setter;

/**
 * Control panel with current status info and buttons
 * to modify or run the game of life.
 * @author Stephan Fuhrmann
 */
public class LifeControlPanel extends javax.swing.JPanel {
    
    /** The game of life being run. */
    @Getter
    @Setter
    private GameOfLife gameOfLife;
    
    /** The canvas for painting. */
    @Setter
    private LifeContentCanvas lifeContentCanvas;
    
    /** Runnable for running the {@link #gameOfLife}. */
    private LifeRunnable lifeRunnable;

    /**
     * Creates new form LifePanel
     */
    public LifeControlPanel() {
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelDelay = new javax.swing.JLabel();
        jLabelSize = new javax.swing.JLabel();
        jSpinnerWidth = new javax.swing.JSpinner();
        jSpinnerHeight = new javax.swing.JSpinner();
        jLabelIteration = new javax.swing.JLabel();
        jLabelTimes = new javax.swing.JLabel();
        jTextFieldIteration = new javax.swing.JTextField();
        jFormattedTextFieldDelay = new javax.swing.JFormattedTextField();
        jToggleButtonRun = new javax.swing.JToggleButton();
        jButtonRandomInit = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Control"));

        jLabelDelay.setText("Delay [s]");

        jLabelSize.setText("Size [x * y]");

        jSpinnerWidth.setModel(new javax.swing.SpinnerNumberModel(10, 10, null, 10));
        jSpinnerWidth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerWidthStateChanged(evt);
            }
        });

        jSpinnerHeight.setModel(new javax.swing.SpinnerNumberModel(10, 10, null, 10));
        jSpinnerHeight.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerHeightStateChanged(evt);
            }
        });

        jLabelIteration.setText("Iteration");

        jLabelTimes.setText("*");

        jTextFieldIteration.setEditable(false);
        jTextFieldIteration.setText("0");

        jFormattedTextFieldDelay.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextFieldDelay.setText("0,2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldIteration, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelIteration)
                            .addComponent(jLabelDelay)
                            .addComponent(jLabelSize))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jSpinnerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelTimes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSpinnerHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jFormattedTextFieldDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDelay)
                    .addComponent(jFormattedTextFieldDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSize)
                    .addComponent(jSpinnerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTimes)
                    .addComponent(jSpinnerHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIteration)
                    .addComponent(jTextFieldIteration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jToggleButtonRun.setMnemonic('r');
        jToggleButtonRun.setText("Run");
        jToggleButtonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonRunActionPerformed(evt);
            }
        });

        jButtonRandomInit.setMnemonic('i');
        jButtonRandomInit.setText("Random init");
        jButtonRandomInit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRandomInitActionPerformed(evt);
            }
        });

        jButtonClear.setMnemonic('c');
        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToggleButtonRun)
                .addGap(18, 18, 18)
                .addComponent(jButtonRandomInit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonClear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButtonRun)
                    .addComponent(jButtonRandomInit)
                    .addComponent(jButtonClear))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonRunActionPerformed
        
        boolean selected =jToggleButtonRun.isSelected();
        if (lifeRunnable != null) {
            lifeRunnable.setRun(false);
        }
        if (selected) {
            
            int interval;
            Double intervalDouble = ((Number)jFormattedTextFieldDelay.getValue()).doubleValue();
            interval = (int)(1000 * intervalDouble);
            
            lifeRunnable = new LifeRunnable(new LifeControl(interval), gameOfLife);
            lifeRunnable.setRepaintConsumer(lifeContentCanvas::setField);
            lifeRunnable.setIterationConsumer(iter -> {
                Runnable r = () -> jTextFieldIteration.setText(iter.toString());
                SwingUtilities.invokeLater(r);
            });
            Thread t = new Thread(lifeRunnable, "Life Runnable");
            t.start();
        }
    }//GEN-LAST:event_jToggleButtonRunActionPerformed

    private void jSpinnerWidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerWidthStateChanged
        resizeUpdate();
    }//GEN-LAST:event_jSpinnerWidthStateChanged

    private void jSpinnerHeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerHeightStateChanged
        resizeUpdate();
    }//GEN-LAST:event_jSpinnerHeightStateChanged

    private void jButtonRandomInitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRandomInitActionPerformed
        Random r = new Random();
        Field field = gameOfLife.getActiveField();
        field.set(() -> r.nextBoolean());
        gameOfLife.setIteration(0);
        jTextFieldIteration.setText("0");
        lifeContentCanvas.repaint();
    }//GEN-LAST:event_jButtonRandomInitActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        Field field = gameOfLife.getActiveField();
        field.set(() -> false);
        gameOfLife.setIteration(0);
        jTextFieldIteration.setText("0");
        lifeContentCanvas.repaint();
    }//GEN-LAST:event_jButtonClearActionPerformed

    /** Update the game to a new field size. */
    private void resizeUpdate() {
        gameOfLife.setSize((int)jSpinnerWidth.getValue(), (int)jSpinnerHeight.getValue());
        lifeContentCanvas.setField(gameOfLife.getActiveField());
        lifeContentCanvas.repaint();        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonRandomInit;
    private javax.swing.JFormattedTextField jFormattedTextFieldDelay;
    private javax.swing.JLabel jLabelDelay;
    private javax.swing.JLabel jLabelIteration;
    private javax.swing.JLabel jLabelSize;
    private javax.swing.JLabel jLabelTimes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinnerHeight;
    private javax.swing.JSpinner jSpinnerWidth;
    private javax.swing.JTextField jTextFieldIteration;
    private javax.swing.JToggleButton jToggleButtonRun;
    // End of variables declaration//GEN-END:variables
}
